{"version":3,"sources":["..\\..\\..\\..\\assets\\Scripts/assets\\Scripts\\Player.js"],"names":["cc","Class","extends","Component","properties","speed","v2","maxSpeed","gravity","drag","direction","jumpSpeed","onLoad","director","getCollisionManager","enabled","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","bind","onKeyReleased","node","collisionX","collisionY","prePosition","preStep","touchingNumber","onDisabled","keyCode","KEY","a","left","d","right","w","up","jumping","y","onCollisionEnter","other","self","otherAabb","world","aabb","otherPreAabb","preAabb","clone","selfAabb","selfPreAabb","x","Intersection","rectRect","xMax","parent","xMin","width","touchingX","yMax","yMin","height","touchingY","onCollisionExit","color","Color","WHITE","update","dt","Math","abs"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        speed: cc.v2(0, 0),\r\n        maxSpeed: cc.v2(2000, 2000),\r\n        gravity: -1000,\r\n        drag: 1000,\r\n        direction: 0,\r\n        jumpSpeed: 300\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        cc.director.getCollisionManager().enabled = true;\r\n        //cc.director.getCollisionManager().enabledDebugDraw = true;\r\n        \r\n        //add keyboard input listener to call turnLeft and turnRight\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD, \r\n            onKeyPressed: this.onKeyPressed.bind(this),\r\n            onKeyReleased: this.onKeyReleased.bind(this),\r\n        }, this.node);\r\n        \r\n        this.collisionX = 0;\r\n        this.collisionY = 0;\r\n\r\n        this.prePosition = cc.v2();\r\n        this.preStep = cc.v2();\r\n\r\n        this.touchingNumber = 0;\r\n    },\r\n    \r\n    onDisabled: function () {\r\n        cc.director.getCollisionManager().enabled = false;\r\n        //cc.director.getCollisionManager().enabledDebugDraw = false;\r\n    },\r\n    \r\n    onKeyPressed: function (keyCode, event) {\r\n        switch(keyCode) {\r\n            case cc.KEY.a:\r\n            case cc.KEY.left:\r\n                this.direction = -1;\r\n                break;\r\n            case cc.KEY.d:\r\n            case cc.KEY.right:\r\n                this.direction = 1;\r\n                break;\r\n            case cc.KEY.w:\r\n            case cc.KEY.up:\r\n                if (!this.jumping) {\r\n                    this.jumping = true;\r\n                    this.speed.y = this.jumpSpeed;    \r\n                }\r\n                break;\r\n        }\r\n    },\r\n    \r\n    onKeyReleased: function (keyCode, event) {\r\n        switch(keyCode) {\r\n            case cc.KEY.a:\r\n            case cc.KEY.left:\r\n            case cc.KEY.d:\r\n            case cc.KEY.right:\r\n                this.direction = 0;\r\n                break;\r\n        }\r\n    },\r\n    \r\n    onCollisionEnter: function (other, self) {\r\n        //this.node.color = cc.Color.RED;\r\n\r\n        this.touchingNumber ++;\r\n        \r\n        // 1st step \r\n        // get pre aabb, go back before collision\r\n        var otherAabb = other.world.aabb;\r\n        var otherPreAabb = other.world.preAabb.clone();\r\n        var selfAabb = self.world.aabb;\r\n        var selfPreAabb = self.world.preAabb.clone();\r\n\r\n        // 2nd step\r\n        // forward x-axis, check whether collision on x-axis\r\n        selfPreAabb.x = selfAabb.x;\r\n        otherPreAabb.x = otherAabb.x;\r\n\r\n        if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\r\n            if (this.speed.x < 0 && (selfPreAabb.xMax > otherPreAabb.xMax)) {\r\n\t\t\t\t//cc.log(\"step 2\");\r\n                this.node.x = otherPreAabb.xMax - this.node.parent.x;\r\n                this.collisionX = -1;\r\n            }\r\n            else if (this.speed.x > 0 && (selfPreAabb.xMin < otherPreAabb.xMin)) {\r\n\t\t\t\t//cc.log(\"step 2\");\r\n                this.node.x = otherPreAabb.xMin - selfPreAabb.width - this.node.parent.x;\r\n                this.collisionX = 1;\r\n            }\r\n\r\n            this.speed.x = 0;\r\n            other.touchingX = true;\r\n            return;\r\n        }\r\n\r\n        // 3rd step\r\n        // forward y-axis, check whether collision on y-axis\r\n        selfPreAabb.y = selfAabb.y;\r\n        otherPreAabb.y = otherAabb.y;\r\n\r\n        if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\r\n\t\t\t//cc.log(\"step 3\");\r\n            if (this.speed.y < 0 && (selfPreAabb.yMax > otherPreAabb.yMax)) {\r\n                this.node.y = otherPreAabb.yMax - this.node.parent.y;\r\n                this.jumping = false;\r\n                this.collisionY = -1;\r\n            }\r\n            else if (this.speed.y > 0 && (selfPreAabb.yMin < otherPreAabb.yMin)) {\r\n                this.node.y = otherPreAabb.yMin - selfPreAabb.height - this.node.parent.y;\r\n                this.collisionY = 1;\r\n            }\r\n            \r\n            this.speed.y = 0;\r\n            other.touchingY = true;\r\n        }    \r\n        \r\n    },\r\n    \r\n    //onCollisionStay: function (other, self) { \r\n\t//cc.log(\"step Stay\");\r\n       // if (this.collisionY === -1) {\r\n           // if (other.node.group === 'Platform') {\r\n               // var motion = other.node.getComponent('PlatformMotion');\r\n                //if (motion) {\r\n                //    this.node.x += motion._movedDiff;\r\n                //}\r\n            //}\r\n\r\n            // this.node.y = other.world.aabb.yMax;\r\n\r\n            // var offset = cc.v2(other.world.aabb.x - other.world.preAabb.x, 0);\r\n            \r\n            // var temp = cc.affineTransformClone(self.world.transform);\r\n            // temp.tx = temp.ty = 0;\r\n            \r\n            // offset = cc.pointApplyAffineTransform(offset, temp);\r\n            // this.node.x += offset.x;\r\n      //  }\r\n   // },\r\n    \r\n    onCollisionExit: function (other) {\r\n        this.touchingNumber --;\r\n        if (this.touchingNumber === 0) {\r\n            this.node.color = cc.Color.WHITE;\r\n        }\r\n\r\n        if (other.touchingX) {\r\n            this.collisionX = 0;\r\n            other.touchingX = false;\r\n        }\r\n        else if (other.touchingY) {\r\n            other.touchingY = false;\r\n            this.collisionY = 0;\r\n            this.jumping = true;\r\n        }\r\n    },\r\n    \r\n    update: function (dt) {\r\n        if (this.collisionY === 0) {\r\n            this.speed.y += this.gravity * dt;\r\n            if (Math.abs(this.speed.y) > this.maxSpeed.y) {\r\n                this.speed.y = this.speed.y > 0 ? this.maxSpeed.y : -this.maxSpeed.y;\r\n            }\r\n        }\r\n\t\t\r\n        if (this.direction === 0) {\r\n            if (this.speed.x > 0) {\r\n                this.speed.x -= this.drag * dt;\r\n                if (this.speed.x <= 0) this.speed.x = 0;\r\n            }\r\n            else if (this.speed.x < 0) {\r\n                this.speed.x += this.drag * dt;\r\n                if (this.speed.x >= 0) this.speed.x = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.speed.x += (this.direction > 0 ? 1 : -1) * this.drag * dt;\r\n            if (Math.abs(this.speed.x) > this.maxSpeed.x) {\r\n                this.speed.x = this.speed.x > 0 ? this.maxSpeed.x : -this.maxSpeed.x;\r\n            }\r\n        }\r\n\r\n        if (this.speed.x * this.collisionX > 0) {\r\n            this.speed.x = 0;\r\n        }\r\n\t\t       \r\n        this.prePosition.x = this.node.x;\r\n        this.prePosition.y = this.node.y;\r\n\r\n        this.preStep.x = this.speed.x * dt;\r\n        this.preStep.y = this.speed.y * dt;\r\n        \r\n        this.node.x += this.speed.x * dt;\r\n        this.node.y += this.speed.y * dt;\r\n\t\t\r\n\t\t//Blocking my player to exit the screen\r\n\t\tif(this.node.x<0 ){\r\n\t\t\tthis.speed.x = +100;\r\n\t\t}else if(this.node.x>640){\r\n\t\t\tthis.speed.x= -100;\r\n\t\t}\r\n    },\r\n});\r\n"]}